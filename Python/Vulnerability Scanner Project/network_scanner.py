from scapy.all import ARP, Ether, srp
import socket
import csv

def resolve_hostname(ip):
    """
    Resolves an IP address to its hostname.

    :param ip: The IP address to resolve.
    :return: The hostname associated with the IP address.
    """
    try:
        hostname = socket.gethostbyaddr(ip)[0]
    except socket.herror:
        hostname = "Unknown"
    return hostname

def network_scan(ip_range):
    """
    Scans the network for active devices within the specified IP range.

    :param ip_range: The IP range to scan, e.g., '192.168.0.1/24'
    :return: A list of dictionaries containing IP, MAC addresses, and hostnames of discovered devices.
    """
    arp = ARP(pdst=ip_range)
    ether = Ether(dst="ff:ff:ff:ff:ff:ff")
    packet = ether / arp

    result = srp(packet, timeout=3, verbose=0)[0]

    devices = []
    for sent, received in result:
        device_info = {
            'ip': received.psrc,
            'mac': received.hwsrc,
            'hostname': resolve_hostname(received.psrc)  # Resolve hostname
        }
        devices.append(device_info)

    return devices

def save_results_to_csv(devices, filename):
    """
    Saves the scan results to a CSV file.

    :param devices: A list of dictionaries containing IP, MAC addresses, and hostnames.
    :param filename: The filename for the CSV file.
    """
    with open(filename, mode='w', newline='') as file:
        writer = csv.DictWriter(file, fieldnames=["ip", "mac", "hostname"])
        writer.writeheader()
        for device in devices:
            writer.writerow(device)

if __name__ == "__main__":
    ip_range = input("Enter the IP range to scan (e.g., 192.168.0.1/24): ")
    devices = network_scan(ip_range)
    
    if devices:
        print(f"\nFound {len(devices)} device(s):\n")
        print(f"{'IP Address':<15} {'MAC Address':<17} {'Hostname':<20}")
        print("-" * 55)
        for device in devices:
            print(f"{device['ip']:<15} {device['mac']:<17} {device['hostname']:<20}")
    else:
        print("\nNo devices found on the network.")
